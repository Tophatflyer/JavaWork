1. Why does Java define both byte and character streams?
	Java has two seperate streams the byte stream and character stream because character stream makes it easier to deal with things such as unicode

2. Even though console input and output is text-based, why does Java still use byte streams for
this purpose?
	At the lower level all I/O is byte-oriented and that is how Java was designed with byte stream in mind before character streams were added.

3. Show how to open a file for reading bytes.

	FileInputStream fin;

	fin = new FileInputStream(filename) throws FileNotFoundException;

4. Show how to open a file for reading characters.

	FileReader reader = new FileReader(filename) throws FileNotFoundException;

5. Show how to open a file for random-access I/O.

	RandomAccessFile randFile = new RandomAccessFile(filename, "rw");

6. How can you convert a numeric string such as "123.23" into its binary equivalent?

	Use the parsing methods defined in Integer and Double for binary conversion.

7. Write a program that copies a text file. In the process, have it convert all spaces into hyphens.
Use the byte stream file classes. Use the traditional approach to closing a file by explicitly
calling close( ).
//Chapter10Q7.java

8. Rewrite the program described in question 7 so that it uses the character stream classes. This
time, use the try-with-resources statement to automatically close the file.
//Chapter10Q8.java

9. What type of stream is System.in?
	InputStream.

10. What does the read( ) method of InputStream return when the end of the stream is
reached?
	it returns an EOF which in this case is -1.

11. What type of stream is used to read binary data?
	DataInputStream.

12. Reader and Writer are at the top of the ____________ class hierarchies.
	CharacterStream.

13. The try-with-resources statement is used for ___________ ____________ ____________.
	automatic resource management.

14. If you are using the traditional method of closing a file, then closing a file within a finally
block is generally a good approach. True or False?
	True.












